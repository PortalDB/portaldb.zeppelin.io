{
  "paragraphs": [
    {
      "title": "Trim a.k.a. Slice",
      "text": "import java.sql.Date\nimport java.time.LocalDate\n\nimport edu.drexel.cs.dbgroup.temporalgraph.{Interval, TEdge}\nimport edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.storage.StorageLevel\nimport org.apache.spark.sql.types.{StructField, _}\n\nval vschema \u003d StructType(\n  StructField(\"VID\", LongType, false) ::\n  StructField(\"Start\", DateType, false) ::\n  StructField(\"End\", DateType, false) ::\n  StructField(\"Name\", StringType, false) :: Nil\n)\n\nval eschema \u003d StructType(\n  StructField(\"EID\", LongType, false) ::\n  StructField(\"SrcID\", LongType, false) ::\n  StructField(\"DstId\", LongType, false) ::\n  StructField(\"Start\", DateType, false) ::\n  StructField(\"End\", DateType, false) ::\n  StructField(\"Value\", StringType, false) :: Nil\n)\n\nval verticesToDf \u003d (vertices: RDD[(VertexId, (Interval, String))]) \u003d\u003e sqlContext.createDataFrame(vertices.map{ case (vid, (interval, name)) \u003d\u003e Row(vid, Date.valueOf(interval.start), Date.valueOf(interval.end), name)},vschema)\nval edgesToDf \u003d (edges: RDD[TEdge[String]]) \u003d\u003e sqlContext.createDataFrame(edges.map{edge \u003d\u003e Row(edge.eId, edge.srcId, edge.dstId, Date.valueOf(edge.interval.start), Date.valueOf(edge.interval.end), edge.attr)},eschema)\n\nval users: RDD[(VertexId, (Interval, String))] \u003d sc.parallelize(Array(\n  (1L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Bob\")),\n  (2L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Barbara\")),\n  (3L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2015-01-01\")), \"Clyde\")),\n  (4L, (Interval(LocalDate.parse(\"2011-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Debbie\")),\n  (5L, (Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Edward\"))\n))\n\nval friendships: RDD[(TEdge[String])] \u003d sc.parallelize(Array(\n  TEdge[String](1L, 1L, 2L, Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\"),\n  TEdge[String](2L, 2L, 3L, Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\"),\n  TEdge[String](3L, 3L, 4L, Interval(LocalDate.parse(\"2011-01-01\"), LocalDate.parse(\"2012-01-01\")), \"Friend\"),\n  TEdge[String](4L, 4L, 5L, Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Friend\"),\n  TEdge[String](5L, 2L, 5L, Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\")\n))\n\nval VEG \u003d VEGraph.fromRDDs(users,friendships, \"Default\", StorageLevel.MEMORY_ONLY_SER)\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"pre-sliced vertices\")\nverticesToDf(VEG.vertices).show()\nprintln(\"pre-sliced edges\")\nedgesToDf(VEG.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\n\nval sliceInterval \u003d Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2012-01-01\"))\nval slicedVEG \u003d VEG.slice(sliceInterval)\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"sliced vertices\")\nverticesToDf(slicedVEG.vertices).show()\nprintln(\"sliced edges\")\nedgesToDf(slicedVEG.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\n",
      "user": "anonymous",
      "dateUpdated": "Dec 20, 2017 5:31:45 PM",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 1392.0,
              "optionOpen": false
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import java.sql.Date\nimport java.time.LocalDate\nimport edu.drexel.cs.dbgroup.temporalgraph.{Interval, TEdge}\nimport edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.storage.StorageLevel\nimport org.apache.spark.sql.types.{StructField, _}\nvschema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(VID,LongType,false), StructField(Start,DateType,false), StructField(End,DateType,false), StructField(Name,StringType,false))\neschema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(EID,LongType,false), StructField(SrcID,LongType,false), StructField(DstId,LongType,false), StructField(Start,DateType,false), StructField(End,DateType,false), StructField(Value,StringType,false))\nverticesToDf: org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (edu.drexel.cs.dbgroup.temporalgraph.Interval, String))] \u003d\u003e org.apache.spark.sql.DataFrame \u003d \u003cfunction1\u003e\nedgesToDf: org.apache.spark.rdd.RDD[edu.drexel.cs.dbgroup.temporalgraph.TEdge[String]] \u003d\u003e org.apache.spark.sql.DataFrame \u003d \u003cfunction1\u003e\nusers: org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (edu.drexel.cs.dbgroup.temporalgraph.Interval, String))] \u003d ParallelCollectionRDD[374] at parallelize at \u003cconsole\u003e:210\nfriendships: org.apache.spark.rdd.RDD[edu.drexel.cs.dbgroup.temporalgraph.TEdge[String]] \u003d ParallelCollectionRDD[375] at parallelize at \u003cconsole\u003e:210\nVEG: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@3ed8d2c7\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\npre-sliced vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  4|2011-01-01|2014-01-01| Debbie|\n|  1|2010-01-01|2014-01-01|    Bob|\n|  5|2012-01-01|2014-01-01| Edward|\n|  2|2010-01-01|2013-01-01|Barbara|\n|  3|2010-01-01|2015-01-01|  Clyde|\n+---+----------+----------+-------+\n\npre-sliced edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  2|    2|    3|2010-01-01|2013-01-01|Friend|\n|  1|    1|    2|2010-01-01|2013-01-01|Friend|\n|  5|    2|    5|2012-01-01|2013-01-01|Friend|\n|  3|    3|    4|2011-01-01|2012-01-01|Friend|\n|  4|    4|    5|2012-01-01|2014-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nsliceInterval: edu.drexel.cs.dbgroup.temporalgraph.Interval \u003d [2010-01-01-2012-01-01)\nslicedVEG: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@2a4aba4b\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nsliced vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  4|2011-01-01|2012-01-01| Debbie|\n|  1|2010-01-01|2012-01-01|    Bob|\n|  2|2010-01-01|2012-01-01|Barbara|\n|  3|2010-01-01|2012-01-01|  Clyde|\n+---+----------+----------+-------+\n\nsliced edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  2|    2|    3|2010-01-01|2012-01-01|Friend|\n|  1|    1|    2|2010-01-01|2012-01-01|Friend|\n|  3|    3|    4|2011-01-01|2012-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1510772920525_600642278",
      "id": "20171111-211640_1358688239",
      "dateCreated": "Nov 15, 2017 7:08:40 PM",
      "dateStarted": "Dec 20, 2017 5:26:56 PM",
      "dateFinished": "Dec 20, 2017 5:27:04 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Map",
      "text": "import java.time.LocalDate\n\nimport edu.drexel.cs.dbgroup.temporalgraph.{Interval, TEdge}\nimport edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.storage.StorageLevel\n\nval vschema \u003d StructType(\n  StructField(\"VID\", LongType, false) ::\n  StructField(\"Start\", DateType, false) ::\n  StructField(\"End\", DateType, false) ::\n  StructField(\"Name\", StringType, false) :: Nil\n)\n\nval eschema \u003d StructType(\n  StructField(\"EID\", LongType, false) ::\n  StructField(\"SrcID\", LongType, false) ::\n  StructField(\"DstId\", LongType, false) ::\n  StructField(\"Start\", DateType, false) ::\n  StructField(\"End\", DateType, false) ::\n  StructField(\"Value\", StringType, false) :: Nil\n)\n\nval verticesToDf \u003d (vertices: RDD[(VertexId, (Interval, String))]) \u003d\u003e sqlContext.createDataFrame(vertices.map{ case (vid, (interval, name)) \u003d\u003e Row(vid, Date.valueOf(interval.start), Date.valueOf(interval.end), name)},vschema)\nval edgesToDf \u003d (edges: RDD[TEdge[String]]) \u003d\u003e sqlContext.createDataFrame(edges.map{edge \u003d\u003e Row(edge.eId, edge.srcId, edge.dstId, Date.valueOf(edge.interval.start), Date.valueOf(edge.interval.end), edge.attr)},eschema)\n\nval users: RDD[(VertexId, (Interval, String))] \u003d sc.parallelize(Array(\n  (1L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Bob\")),\n  (2L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Barbara\")),\n  (3L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2015-01-01\")), \"Clyde\")),\n  (4L, (Interval(LocalDate.parse(\"2011-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Debbie\")),\n  (5L, (Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Edward\"))\n))\n\nval friendships: RDD[(TEdge[String])] \u003d sc.parallelize(Array(\n  TEdge[String](1L, 1L, 2L, Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\"),\n  TEdge[String](2L, 2L, 3L, Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\"),\n  TEdge[String](3L, 3L, 4L, Interval(LocalDate.parse(\"2011-01-01\"), LocalDate.parse(\"2012-01-01\")), \"Friend\"),\n  TEdge[String](4L, 4L, 5L, Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Friend\"),\n  TEdge[String](5L, 2L, 5L, Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\")\n))\n\nval VEG \u003d VEGraph.fromRDDs(users,friendships, \"Default\", StorageLevel.MEMORY_ONLY_SER)\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"pre-mapped vertices\")\nverticesToDf(VEG.vertices).show()\nprintln(\"pre-mapped edges\")\nedgesToDf(VEG.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\n\nval vmapped \u003d VEG.vmap((vid, interval, name) \u003d\u003e s\"${name} the friendly node\", \"DefaultName\")\nval emapped \u003d vmapped.emap(tedge \u003d\u003e \"BestFriends\")\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"mapped vertices\")\nverticesToDf(vmapped.vertices).show()\nprintln(\"mapped edges\")\nedgesToDf(emapped.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\n",
      "user": "anonymous",
      "dateUpdated": "Dec 20, 2017 5:32:06 PM",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 1212.0,
              "optionOpen": false
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import java.time.LocalDate\nimport edu.drexel.cs.dbgroup.temporalgraph.{Interval, TEdge}\nimport edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.storage.StorageLevel\nvschema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(VID,LongType,false), StructField(Start,DateType,false), StructField(End,DateType,false), StructField(Name,StringType,false))\neschema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(EID,LongType,false), StructField(SrcID,LongType,false), StructField(DstId,LongType,false), StructField(Start,DateType,false), StructField(End,DateType,false), StructField(Value,StringType,false))\nverticesToDf: org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (edu.drexel.cs.dbgroup.temporalgraph.Interval, String))] \u003d\u003e org.apache.spark.sql.DataFrame \u003d \u003cfunction1\u003e\nedgesToDf: org.apache.spark.rdd.RDD[edu.drexel.cs.dbgroup.temporalgraph.TEdge[String]] \u003d\u003e org.apache.spark.sql.DataFrame \u003d \u003cfunction1\u003e\nusers: org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (edu.drexel.cs.dbgroup.temporalgraph.Interval, String))] \u003d ParallelCollectionRDD[475] at parallelize at \u003cconsole\u003e:234\nfriendships: org.apache.spark.rdd.RDD[edu.drexel.cs.dbgroup.temporalgraph.TEdge[String]] \u003d ParallelCollectionRDD[476] at parallelize at \u003cconsole\u003e:234\nVEG: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@59da78ec\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\npre-mapped vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  4|2011-01-01|2014-01-01| Debbie|\n|  1|2010-01-01|2014-01-01|    Bob|\n|  5|2012-01-01|2014-01-01| Edward|\n|  2|2010-01-01|2013-01-01|Barbara|\n|  3|2010-01-01|2015-01-01|  Clyde|\n+---+----------+----------+-------+\n\npre-mapped edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  2|    2|    3|2010-01-01|2013-01-01|Friend|\n|  1|    1|    2|2010-01-01|2013-01-01|Friend|\n|  5|    2|    5|2012-01-01|2013-01-01|Friend|\n|  3|    3|    4|2011-01-01|2012-01-01|Friend|\n|  4|    4|    5|2012-01-01|2014-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nvmapped: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@29b5e3d0\nemapped: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@2a92bee3\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nmapped vertices\n+---+----------+----------+--------------------+\n|VID|     Start|       End|                Name|\n+---+----------+----------+--------------------+\n|  4|2011-01-01|2014-01-01|Debbie the friend...|\n|  1|2010-01-01|2014-01-01|Bob the friendly ...|\n|  5|2012-01-01|2014-01-01|Edward the friend...|\n|  2|2010-01-01|2013-01-01|Barbara the frien...|\n|  3|2010-01-01|2015-01-01|Clyde the friendl...|\n+---+----------+----------+--------------------+\n\nmapped edges\n+---+-----+-----+----------+----------+-----------+\n|EID|SrcID|DstId|     Start|       End|      Value|\n+---+-----+-----+----------+----------+-----------+\n|  2|    2|    3|2010-01-01|2013-01-01|BestFriends|\n|  1|    1|    2|2010-01-01|2013-01-01|BestFriends|\n|  5|    2|    5|2012-01-01|2013-01-01|BestFriends|\n|  3|    3|    4|2011-01-01|2012-01-01|BestFriends|\n|  4|    4|    5|2012-01-01|2014-01-01|BestFriends|\n+---+-----+-----+----------+----------+-----------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1510773511780_-459097399",
      "id": "20171115-191831_661815576",
      "dateCreated": "Nov 15, 2017 7:18:31 PM",
      "dateStarted": "Dec 20, 2017 5:31:02 PM",
      "dateFinished": "Dec 20, 2017 5:31:11 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "SubGraph",
      "text": "import java.time.LocalDate\n\nimport edu.drexel.cs.dbgroup.temporalgraph.{Interval, ProgramContext, TEdge, TEdgeTriplet}\nimport edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.storage.StorageLevel\n\nProgramContext.setContext(sc)\n\nval vschema \u003d StructType(\n  StructField(\"VID\", LongType, false) ::\n  StructField(\"Start\", DateType, false) ::\n  StructField(\"End\", DateType, false) ::\n  StructField(\"Name\", StringType, false) :: Nil\n)\n\nval eschema \u003d StructType(\n  StructField(\"EID\", LongType, false) ::\n  StructField(\"SrcID\", LongType, false) ::\n  StructField(\"DstId\", LongType, false) ::\n  StructField(\"Start\", DateType, false) ::\n  StructField(\"End\", DateType, false) ::\n  StructField(\"Value\", StringType, false) :: Nil\n)\n\nval verticesToDf \u003d (vertices: RDD[(VertexId, (Interval, String))]) \u003d\u003e sqlContext.createDataFrame(vertices.map{ case (vid, (interval, name)) \u003d\u003e Row(vid, Date.valueOf(interval.start), Date.valueOf(interval.end), name)},vschema)\nval edgesToDf \u003d (edges: RDD[TEdge[String]]) \u003d\u003e sqlContext.createDataFrame(edges.map{edge \u003d\u003e Row(edge.eId, edge.srcId, edge.dstId, Date.valueOf(edge.interval.start), Date.valueOf(edge.interval.end), edge.attr)},eschema)\n\nval users: RDD[(VertexId, (Interval, String))] \u003d sc.parallelize(Array(\n  (1L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Bob\")),\n  (2L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Barbara\")),\n  (3L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2015-01-01\")), \"Clyde\")),\n  (4L, (Interval(LocalDate.parse(\"2011-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Debbie\")),\n  (5L, (Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Edward\"))\n))\n\nval friendships: RDD[(TEdge[String])] \u003d sc.parallelize(Array(\n  TEdge[String](1L, 1L, 2L, Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\"),\n  TEdge[String](2L, 2L, 3L, Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\"),\n  TEdge[String](3L, 3L, 4L, Interval(LocalDate.parse(\"2011-01-01\"), LocalDate.parse(\"2012-01-01\")), \"Friend\"),\n  TEdge[String](4L, 4L, 5L, Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Friend\"),\n  TEdge[String](5L, 2L, 5L, Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\")\n))\n\nval VEG \u003d VEGraph.fromRDDs(users,friendships, \"Default\", StorageLevel.MEMORY_ONLY_SER)\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"pre-subgraph vertices\")\nverticesToDf(VEG.vertices).show()\nprintln(\"pre-subgraph edges\")\nedgesToDf(VEG.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\n\nval vSelectFunction \u003d (id: VertexId, attr: String, interval: Interval) \u003d\u003e attr.startsWith(\"B\")\nval vsubgraph \u003d VEG.vsubgraph(vSelectFunction)\n\nval eSelectFunction \u003d (trip: TEdgeTriplet[String, String]) \u003d\u003e trip.srcId \u003d\u003d 2\nval esubgraph \u003d VEG.esubgraph(eSelectFunction, TripletFields.None)\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"vsubgraph vertices\")\nverticesToDf(vsubgraph.vertices).show()\nprintln(\"vsubgraph edges\")\nedgesToDf(vsubgraph.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"esubgraph vertices\")\nverticesToDf(esubgraph.vertices).show()\nprintln(\"esubgraph edges\")\nedgesToDf(esubgraph.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\n",
      "user": "anonymous",
      "dateUpdated": "Dec 20, 2017 6:06:16 PM",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 1437.0,
              "optionOpen": false
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import java.time.LocalDate\nimport edu.drexel.cs.dbgroup.temporalgraph.{Interval, ProgramContext, TEdge, TEdgeTriplet}\nimport edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.storage.StorageLevel\nvschema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(VID,LongType,false), StructField(Start,DateType,false), StructField(End,DateType,false), StructField(Name,StringType,false))\neschema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(EID,LongType,false), StructField(SrcID,LongType,false), StructField(DstId,LongType,false), StructField(Start,DateType,false), StructField(End,DateType,false), StructField(Value,StringType,false))\nverticesToDf: org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (edu.drexel.cs.dbgroup.temporalgraph.Interval, String))] \u003d\u003e org.apache.spark.sql.DataFrame \u003d \u003cfunction1\u003e\nedgesToDf: org.apache.spark.rdd.RDD[edu.drexel.cs.dbgroup.temporalgraph.TEdge[String]] \u003d\u003e org.apache.spark.sql.DataFrame \u003d \u003cfunction1\u003e\nusers: org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (edu.drexel.cs.dbgroup.temporalgraph.Interval, String))] \u003d ParallelCollectionRDD[539] at parallelize at \u003cconsole\u003e:250\nfriendships: org.apache.spark.rdd.RDD[edu.drexel.cs.dbgroup.temporalgraph.TEdge[String]] \u003d ParallelCollectionRDD[540] at parallelize at \u003cconsole\u003e:250\nVEG: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@153ade92\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\npre-subgraph vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  4|2011-01-01|2014-01-01| Debbie|\n|  1|2010-01-01|2014-01-01|    Bob|\n|  5|2012-01-01|2014-01-01| Edward|\n|  2|2010-01-01|2013-01-01|Barbara|\n|  3|2010-01-01|2015-01-01|  Clyde|\n+---+----------+----------+-------+\n\npre-subgraph edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  2|    2|    3|2010-01-01|2013-01-01|Friend|\n|  1|    1|    2|2010-01-01|2013-01-01|Friend|\n|  5|    2|    5|2012-01-01|2013-01-01|Friend|\n|  3|    3|    4|2011-01-01|2012-01-01|Friend|\n|  4|    4|    5|2012-01-01|2014-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nvSelectFunction: (org.apache.spark.graphx.VertexId, String, edu.drexel.cs.dbgroup.temporalgraph.Interval) \u003d\u003e Boolean \u003d \u003cfunction3\u003e\nvsubgraph: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@4cc1166f\neSelectFunction: edu.drexel.cs.dbgroup.temporalgraph.TEdgeTriplet[String,String] \u003d\u003e Boolean \u003d \u003cfunction1\u003e\nesubgraph: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@51883905\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nvsubgraph vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  1|2010-01-01|2014-01-01|    Bob|\n|  2|2010-01-01|2013-01-01|Barbara|\n+---+----------+----------+-------+\n\nvsubgraph edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  1|    1|    2|2010-01-01|2013-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nesubgraph vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  4|2011-01-01|2014-01-01| Debbie|\n|  1|2010-01-01|2014-01-01|    Bob|\n|  5|2012-01-01|2014-01-01| Edward|\n|  2|2010-01-01|2013-01-01|Barbara|\n|  3|2010-01-01|2015-01-01|  Clyde|\n+---+----------+----------+-------+\n\nesubgraph edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  2|    2|    3|2010-01-01|2013-01-01|Friend|\n|  5|    2|    5|2012-01-01|2013-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1510774983901_834125732",
      "id": "20171115-194303_92492943",
      "dateCreated": "Nov 15, 2017 7:43:03 PM",
      "dateStarted": "Dec 20, 2017 6:02:58 PM",
      "dateFinished": "Dec 20, 2017 6:03:11 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Temporal Node Creation",
      "text": "import java.time.LocalDate\n\nimport edu.drexel.cs.dbgroup.temporalgraph.{Interval, TEdge}\nimport edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph\nimport edu.drexel.cs.dbgroup.temporalgraph._\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.storage.StorageLevel\n\nval vschema \u003d StructType(\n  StructField(\"VID\", LongType, false) ::\n  StructField(\"Start\", DateType, false) ::\n  StructField(\"End\", DateType, false) ::\n  StructField(\"Name\", StringType, false) :: Nil\n)\n\nval eschema \u003d StructType(\n  StructField(\"EID\", LongType, false) ::\n  StructField(\"SrcID\", LongType, false) ::\n  StructField(\"DstId\", LongType, false) ::\n  StructField(\"Start\", DateType, false) ::\n  StructField(\"End\", DateType, false) ::\n  StructField(\"Value\", StringType, false) :: Nil\n)\n\nval verticesToDf \u003d (vertices: RDD[(VertexId, (Interval, String))]) \u003d\u003e sqlContext.createDataFrame(vertices.map{ case (vid, (interval, name)) \u003d\u003e Row(vid, Date.valueOf(interval.start), Date.valueOf(interval.end), name)},vschema)\nval edgesToDf \u003d (edges: RDD[TEdge[String]]) \u003d\u003e sqlContext.createDataFrame(edges.map{edge \u003d\u003e Row(edge.eId, edge.srcId, edge.dstId, Date.valueOf(edge.interval.start), Date.valueOf(edge.interval.end), edge.attr)},eschema)\n\nval users: RDD[(VertexId, (Interval, String))] \u003d sc.parallelize(Array(\n  (1L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Bob\")),\n  (2L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Barbara\")),\n  (3L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2015-01-01\")), \"Clyde\")),\n  (4L, (Interval(LocalDate.parse(\"2011-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Debbie\")),\n  (5L, (Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Edward\"))\n))\n\nval friendships: RDD[(TEdge[String])] \u003d sc.parallelize(Array(\n  TEdge[String](1L, 1L, 2L, Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\"),\n  TEdge[String](2L, 2L, 3L, Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\"),\n  TEdge[String](3L, 3L, 4L, Interval(LocalDate.parse(\"2011-01-01\"), LocalDate.parse(\"2012-01-01\")), \"Friend\"),\n  TEdge[String](4L, 4L, 5L, Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Friend\"),\n  TEdge[String](5L, 2L, 5L, Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\")\n))\n\nval VEG \u003d VEGraph.fromRDDs(users,friendships, \"Default\", StorageLevel.MEMORY_ONLY_SER)\n\nval resolution5years \u003d Resolution.between(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2015-01-01\"))\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"before temporal node creation vertices\")\nverticesToDf(VEG.vertices).show()\nprintln(\"before temporal node creation edges\")\nedgesToDf(VEG.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\n\nval existsIn5Years \u003d VEG.createTemporalNodes(new TimeSpec(resolution5years), Exists(), Exists(), (name1, name2) \u003d\u003e name1, (type1, type2) \u003d\u003e type1)\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"after node creation vertices\")\nverticesToDf(existsIn5Years.vertices).show()\nprintln(\"after node creation edges\")\nedgesToDf(existsIn5Years.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")",
      "user": "anonymous",
      "dateUpdated": "Dec 20, 2017 6:46:21 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 1428.0,
              "optionOpen": false
            }
          }
        },
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import java.time.LocalDate\nimport edu.drexel.cs.dbgroup.temporalgraph.{Interval, TEdge}\nimport edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph\nimport edu.drexel.cs.dbgroup.temporalgraph._\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.storage.StorageLevel\nvschema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(VID,LongType,false), StructField(Start,DateType,false), StructField(End,DateType,false), StructField(Name,StringType,false))\neschema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(EID,LongType,false), StructField(SrcID,LongType,false), StructField(DstId,LongType,false), StructField(Start,DateType,false), StructField(End,DateType,false), StructField(Value,StringType,false))\nverticesToDf: org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (edu.drexel.cs.dbgroup.temporalgraph.Interval, String))] \u003d\u003e org.apache.spark.sql.DataFrame \u003d \u003cfunction1\u003e\nedgesToDf: org.apache.spark.rdd.RDD[edu.drexel.cs.dbgroup.temporalgraph.TEdge[String]] \u003d\u003e org.apache.spark.sql.DataFrame \u003d \u003cfunction1\u003e\nusers: org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (edu.drexel.cs.dbgroup.temporalgraph.Interval, String))] \u003d ParallelCollectionRDD[1444] at parallelize at \u003cconsole\u003e:347\nfriendships: org.apache.spark.rdd.RDD[edu.drexel.cs.dbgroup.temporalgraph.TEdge[String]] \u003d ParallelCollectionRDD[1445] at parallelize at \u003cconsole\u003e:347\nVEG: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@5757070c\nresolution5years: edu.drexel.cs.dbgroup.temporalgraph.Resolution \u003d P5Y\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nbefore temporal node creation vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  4|2011-01-01|2014-01-01| Debbie|\n|  1|2010-01-01|2014-01-01|    Bob|\n|  5|2012-01-01|2014-01-01| Edward|\n|  2|2010-01-01|2013-01-01|Barbara|\n|  3|2010-01-01|2015-01-01|  Clyde|\n+---+----------+----------+-------+\n\nbefore temporal node creation edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  2|    2|    3|2010-01-01|2013-01-01|Friend|\n|  1|    1|    2|2010-01-01|2013-01-01|Friend|\n|  5|    2|    5|2012-01-01|2013-01-01|Friend|\n|  3|    3|    4|2011-01-01|2012-01-01|Friend|\n|  4|    4|    5|2012-01-01|2014-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nexistsIn5Years: edu.drexel.cs.dbgroup.temporalgraph.TGraphNoSchema[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@3834c1bb\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nafter node creation vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  4|2010-01-01|2015-01-01| Debbie|\n|  1|2010-01-01|2015-01-01|    Bob|\n|  5|2010-01-01|2015-01-01| Edward|\n|  2|2010-01-01|2015-01-01|Barbara|\n|  3|2010-01-01|2015-01-01|  Clyde|\n+---+----------+----------+-------+\n\nafter node creation edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  2|    2|    3|2010-01-01|2015-01-01|Friend|\n|  1|    1|    2|2010-01-01|2015-01-01|Friend|\n|  5|    2|    5|2010-01-01|2015-01-01|Friend|\n|  3|    3|    4|2010-01-01|2015-01-01|Friend|\n|  4|    4|    5|2010-01-01|2015-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1510808133261_-90893594",
      "id": "20171116-045533_777181967",
      "dateCreated": "Nov 16, 2017 4:55:33 AM",
      "dateStarted": "Dec 20, 2017 6:45:51 PM",
      "dateFinished": "Dec 20, 2017 6:46:07 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Structural Node Creation",
      "text": "import java.time.LocalDate\n\nimport edu.drexel.cs.dbgroup.temporalgraph.{Interval, TEdge}\nimport edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph\nimport edu.drexel.cs.dbgroup.temporalgraph._\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.storage.StorageLevel\n\nval vschema \u003d StructType(\n  StructField(\"VID\", LongType, false) ::\n  StructField(\"Start\", DateType, false) ::\n  StructField(\"End\", DateType, false) ::\n  StructField(\"Name\", StringType, false) :: Nil\n)\n\nval eschema \u003d StructType(\n  StructField(\"EID\", LongType, false) ::\n  StructField(\"SrcID\", LongType, false) ::\n  StructField(\"DstId\", LongType, false) ::\n  StructField(\"Start\", DateType, false) ::\n  StructField(\"End\", DateType, false) ::\n  StructField(\"Value\", StringType, false) :: Nil\n)\n\nval verticesToDf \u003d (vertices: RDD[(VertexId, (Interval, String))]) \u003d\u003e sqlContext.createDataFrame(vertices.map{ case (vid, (interval, name)) \u003d\u003e Row(vid, Date.valueOf(interval.start), Date.valueOf(interval.end), name)},vschema)\nval edgesToDf \u003d (edges: RDD[TEdge[String]]) \u003d\u003e sqlContext.createDataFrame(edges.map{edge \u003d\u003e Row(edge.eId, edge.srcId, edge.dstId, Date.valueOf(edge.interval.start), Date.valueOf(edge.interval.end), edge.attr)},eschema)\n\nval users: RDD[(VertexId, (Interval, String))] \u003d sc.parallelize(Array(\n  (1L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Bob\")),\n  (2L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Barbara\")),\n  (3L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2015-01-01\")), \"Clyde\")),\n  (4L, (Interval(LocalDate.parse(\"2011-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Debbie\")),\n  (5L, (Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Edward\"))\n))\n\nval friendships: RDD[(TEdge[String])] \u003d sc.parallelize(Array(\n  TEdge[String](1L, 1L, 2L, Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\"),\n  TEdge[String](2L, 2L, 3L, Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\"),\n  TEdge[String](3L, 3L, 4L, Interval(LocalDate.parse(\"2011-01-01\"), LocalDate.parse(\"2012-01-01\")), \"Friend\"),\n  TEdge[String](4L, 4L, 5L, Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Friend\"),\n  TEdge[String](5L, 2L, 5L, Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\")\n))\n\nval VEG \u003d VEGraph.fromRDDs(users,friendships, \"Default\", StorageLevel.MEMORY_ONLY_SER)\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"before temporal node creation vertices\")\nverticesToDf(VEG.vertices).show()\nprintln(\"before temporal node creation edges\")\nedgesToDf(VEG.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\n\nval vertexAggregationFunction \u003d (name1: String, name2: String) \u003d\u003e name1.head.toString\nval vertexGroupByFunction \u003d (vid: VertexId, name: String) \u003d\u003e name.head.toString.hashCode.toLong\n\nval groupByFirstLetter \u003d VEG.createAttributeNodes(vertexAggregationFunction)(vertexGroupByFunction)\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"after node creation vertices\")\nverticesToDf(groupByFirstLetter.vertices).show()\nprintln(\"after node creation edges\")\nedgesToDf(groupByFirstLetter.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")",
      "user": "anonymous",
      "dateUpdated": "Dec 20, 2017 6:56:09 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 1428.0,
              "optionOpen": false
            }
          }
        },
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import java.time.LocalDate\nimport edu.drexel.cs.dbgroup.temporalgraph.{Interval, TEdge}\nimport edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph\nimport edu.drexel.cs.dbgroup.temporalgraph._\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.storage.StorageLevel\nvschema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(VID,LongType,false), StructField(Start,DateType,false), StructField(End,DateType,false), StructField(Name,StringType,false))\neschema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(EID,LongType,false), StructField(SrcID,LongType,false), StructField(DstId,LongType,false), StructField(Start,DateType,false), StructField(End,DateType,false), StructField(Value,StringType,false))\nverticesToDf: org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (edu.drexel.cs.dbgroup.temporalgraph.Interval, String))] \u003d\u003e org.apache.spark.sql.DataFrame \u003d \u003cfunction1\u003e\nedgesToDf: org.apache.spark.rdd.RDD[edu.drexel.cs.dbgroup.temporalgraph.TEdge[String]] \u003d\u003e org.apache.spark.sql.DataFrame \u003d \u003cfunction1\u003e\nusers: org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (edu.drexel.cs.dbgroup.temporalgraph.Interval, String))] \u003d ParallelCollectionRDD[1567] at parallelize at \u003cconsole\u003e:391\nfriendships: org.apache.spark.rdd.RDD[edu.drexel.cs.dbgroup.temporalgraph.TEdge[String]] \u003d ParallelCollectionRDD[1568] at parallelize at \u003cconsole\u003e:391\nVEG: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@4ae01a5b\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nbefore temporal node creation vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  4|2011-01-01|2014-01-01| Debbie|\n|  1|2010-01-01|2014-01-01|    Bob|\n|  5|2012-01-01|2014-01-01| Edward|\n|  2|2010-01-01|2013-01-01|Barbara|\n|  3|2010-01-01|2015-01-01|  Clyde|\n+---+----------+----------+-------+\n\nbefore temporal node creation edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  2|    2|    3|2010-01-01|2013-01-01|Friend|\n|  1|    1|    2|2010-01-01|2013-01-01|Friend|\n|  5|    2|    5|2012-01-01|2013-01-01|Friend|\n|  3|    3|    4|2011-01-01|2012-01-01|Friend|\n|  4|    4|    5|2012-01-01|2014-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nvertexAggregationFunction: (String, String) \u003d\u003e String \u003d \u003cfunction2\u003e\nvertexGroupByFunction: (org.apache.spark.graphx.VertexId, String) \u003d\u003e Long \u003d \u003cfunction2\u003e\ngroupByFirstLetter: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@2f950648\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nafter node creation vertices\n+---+----------+----------+------+\n|VID|     Start|       End|  Name|\n+---+----------+----------+------+\n| 68|2011-01-01|2014-01-01|Debbie|\n| 69|2012-01-01|2014-01-01|Edward|\n| 66|2013-01-01|2014-01-01|   Bob|\n| 66|2010-01-01|2013-01-01|     B|\n| 67|2010-01-01|2015-01-01| Clyde|\n+---+----------+----------+------+\n\nafter node creation edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  1|   66|   66|2010-01-01|2013-01-01|Friend|\n|  3|   67|   68|2011-01-01|2012-01-01|Friend|\n|  2|   66|   67|2010-01-01|2013-01-01|Friend|\n|  5|   66|   69|2012-01-01|2013-01-01|Friend|\n|  4|   68|   69|2012-01-01|2014-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1513795598751_-2072747957",
      "id": "20171220-184638_1700839453",
      "dateCreated": "Dec 20, 2017 6:46:38 PM",
      "dateStarted": "Dec 20, 2017 6:56:09 PM",
      "dateFinished": "Dec 20, 2017 6:56:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Union, Intersection, and Difference",
      "text": "import java.time.LocalDate\n\nimport edu.drexel.cs.dbgroup.temporalgraph.{Interval, TEdge}\nimport edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.storage.StorageLevel\n\nval vschema \u003d StructType(\n  StructField(\"VID\", LongType, false) ::\n  StructField(\"Start\", DateType, false) ::\n  StructField(\"End\", DateType, false) ::\n  StructField(\"Name\", StringType, false) :: Nil\n)\n\nval eschema \u003d StructType(\n  StructField(\"EID\", LongType, false) ::\n  StructField(\"SrcID\", LongType, false) ::\n  StructField(\"DstId\", LongType, false) ::\n  StructField(\"Start\", DateType, false) ::\n  StructField(\"End\", DateType, false) ::\n  StructField(\"Value\", StringType, false) :: Nil\n)\n\nval verticesToDf \u003d (vertices: RDD[(VertexId, (Interval, String))]) \u003d\u003e sqlContext.createDataFrame(vertices.map{ case (vid, (interval, name)) \u003d\u003e Row(vid, Date.valueOf(interval.start), Date.valueOf(interval.end), name)},vschema)\nval edgesToDf \u003d (edges: RDD[TEdge[String]]) \u003d\u003e sqlContext.createDataFrame(edges.map{edge \u003d\u003e Row(edge.eId, edge.srcId, edge.dstId, Date.valueOf(edge.interval.start), Date.valueOf(edge.interval.end), edge.attr)},eschema)\n\nval users1: RDD[(VertexId, (Interval, String))] \u003d sc.parallelize(Array(\n  (1L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Bob\")),\n  (2L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Barbara\")),\n  (3L, (Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2015-01-01\")), \"Clyde\"))\n))\n\nval friendships1: RDD[(TEdge[String])] \u003d sc.parallelize(Array(\n  TEdge[String](1L, 1L, 2L, Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\"),\n  TEdge[String](2L, 2L, 3L, Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\")\n))\n\nval VEG1 \u003d VEGraph.fromRDDs(users1,friendships1, \"Default\", StorageLevel.MEMORY_ONLY_SER)\n\nval users2: RDD[(VertexId, (Interval, String))] \u003d sc.parallelize(Array(\n  (1L, (Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2016-01-01\")), \"Bob\")),\n  (2L, (Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Barbara\")),\n  (4L, (Interval(LocalDate.parse(\"2011-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Debbie\")),\n  (5L, (Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Edward\"))\n))\n\nval friendships2: RDD[(TEdge[String])] \u003d sc.parallelize(Array(\n  TEdge[String](1L, 1L, 2L, Interval(LocalDate.parse(\"2010-01-01\"), LocalDate.parse(\"2016-01-01\")), \"Friend\"),\n  TEdge[String](4L, 4L, 5L, Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2014-01-01\")), \"Friend\"),\n  TEdge[String](5L, 2L, 5L, Interval(LocalDate.parse(\"2012-01-01\"), LocalDate.parse(\"2013-01-01\")), \"Friend\")\n))\n\nval VEG2 \u003d VEGraph.fromRDDs(users2,friendships2, \"Default\", StorageLevel.MEMORY_ONLY_SER)\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"graph 1 vertices\")\nverticesToDf(VEG1.vertices).show()\nprintln(\"graph 1 edges\")\nedgesToDf(VEG1.edges).show()\nprintln(\"graph 2 vertices\")\nverticesToDf(VEG2.vertices).show()\nprintln(\"graph 2 edges\")\nedgesToDf(VEG2.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\n\nval unionVEG \u003d VEG1.union(VEG2, (name1, name2) \u003d\u003e name1, (type1, type2) \u003d\u003e type1)\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"unioned vertices\")\nverticesToDf(unionVEG.vertices).show()\nprintln(\"unioned edges\")\nedgesToDf(unionVEG.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\n\nval intersectionVEG \u003d VEG1.intersection(VEG2, (name1, name2) \u003d\u003e name1, (type1, type2) \u003d\u003e type1)\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"intersected vertices\")\nverticesToDf(intersectionVEG.vertices).show()\nprintln(\"intersected edges\")\nedgesToDf(intersectionVEG.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\n\nval differenceVEG \u003d VEG1.difference(VEG2)\n\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\nprintln(\"difffed vertices\")\nverticesToDf(differenceVEG.vertices).show()\nprintln(\"diffed edges\")\nedgesToDf(differenceVEG.edges).show()\nprintln(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\")\n",
      "user": "anonymous",
      "dateUpdated": "Dec 20, 2017 6:26:42 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 2040.0,
              "optionOpen": false
            }
          }
        },
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import java.time.LocalDate\nimport edu.drexel.cs.dbgroup.temporalgraph.{Interval, TEdge}\nimport edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph\nimport org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.storage.StorageLevel\nvschema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(VID,LongType,false), StructField(Start,DateType,false), StructField(End,DateType,false), StructField(Name,StringType,false))\neschema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(EID,LongType,false), StructField(SrcID,LongType,false), StructField(DstId,LongType,false), StructField(Start,DateType,false), StructField(End,DateType,false), StructField(Value,StringType,false))\nverticesToDf: org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (edu.drexel.cs.dbgroup.temporalgraph.Interval, String))] \u003d\u003e org.apache.spark.sql.DataFrame \u003d \u003cfunction1\u003e\nedgesToDf: org.apache.spark.rdd.RDD[edu.drexel.cs.dbgroup.temporalgraph.TEdge[String]] \u003d\u003e org.apache.spark.sql.DataFrame \u003d \u003cfunction1\u003e\nusers1: org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (edu.drexel.cs.dbgroup.temporalgraph.Interval, String))] \u003d ParallelCollectionRDD[1123] at parallelize at \u003cconsole\u003e:290\nfriendships1: org.apache.spark.rdd.RDD[edu.drexel.cs.dbgroup.temporalgraph.TEdge[String]] \u003d ParallelCollectionRDD[1124] at parallelize at \u003cconsole\u003e:290\nVEG1: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@577737f\nusers2: org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId, (edu.drexel.cs.dbgroup.temporalgraph.Interval, String))] \u003d ParallelCollectionRDD[1125] at parallelize at \u003cconsole\u003e:290\nfriendships2: org.apache.spark.rdd.RDD[edu.drexel.cs.dbgroup.temporalgraph.TEdge[String]] \u003d ParallelCollectionRDD[1126] at parallelize at \u003cconsole\u003e:290\nVEG2: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@2e93f061\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\ngraph 1 vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  1|2010-01-01|2014-01-01|    Bob|\n|  2|2010-01-01|2013-01-01|Barbara|\n|  3|2010-01-01|2015-01-01|  Clyde|\n+---+----------+----------+-------+\n\ngraph 1 edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  2|    2|    3|2010-01-01|2013-01-01|Friend|\n|  1|    1|    2|2010-01-01|2013-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\ngraph 2 vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  4|2011-01-01|2014-01-01| Debbie|\n|  1|2012-01-01|2016-01-01|    Bob|\n|  5|2012-01-01|2014-01-01| Edward|\n|  2|2012-01-01|2014-01-01|Barbara|\n+---+----------+----------+-------+\n\ngraph 2 edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  1|    1|    2|2010-01-01|2016-01-01|Friend|\n|  5|    2|    5|2012-01-01|2013-01-01|Friend|\n|  4|    4|    5|2012-01-01|2014-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nunionVEG: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@1550887c\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nunioned vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  1|2010-01-01|2016-01-01|    Bob|\n|  2|2010-01-01|2014-01-01|Barbara|\n|  3|2010-01-01|2015-01-01|  Clyde|\n|  4|2011-01-01|2014-01-01| Debbie|\n|  5|2012-01-01|2014-01-01| Edward|\n+---+----------+----------+-------+\n\nunioned edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  2|    2|    3|2010-01-01|2013-01-01|Friend|\n|  1|    1|    2|2010-01-01|2016-01-01|Friend|\n|  5|    2|    5|2012-01-01|2013-01-01|Friend|\n|  4|    4|    5|2012-01-01|2014-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nintersectionVEG: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@279786b5\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nintersected vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  1|2012-01-01|2014-01-01|    Bob|\n|  2|2012-01-01|2013-01-01|Barbara|\n+---+----------+----------+-------+\n\nintersected edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  1|    1|    2|2010-01-01|2013-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\ndifferenceVEG: edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph[String,String] \u003d edu.drexel.cs.dbgroup.temporalgraph.representations.VEGraph@16d99944\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\ndifffed vertices\n+---+----------+----------+-------+\n|VID|     Start|       End|   Name|\n+---+----------+----------+-------+\n|  1|2010-01-01|2012-01-01|    Bob|\n|  2|2010-01-01|2012-01-01|Barbara|\n|  3|2010-01-01|2015-01-01|  Clyde|\n+---+----------+----------+-------+\n\ndiffed edges\n+---+-----+-----+----------+----------+------+\n|EID|SrcID|DstId|     Start|       End| Value|\n+---+-----+-----+----------+----------+------+\n|  2|    2|    3|2010-01-01|2012-01-01|Friend|\n+---+-----+-----+----------+----------+------+\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1510772920528_611799996",
      "id": "20171115-184512_1126275549",
      "dateCreated": "Nov 15, 2017 7:08:40 PM",
      "dateStarted": "Dec 20, 2017 6:20:19 PM",
      "dateFinished": "Dec 20, 2017 6:20:40 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1513795374928_-1778939360",
      "id": "20171220-184254_1464494212",
      "dateCreated": "Dec 20, 2017 6:42:54 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "~Trash/TGraph Operators",
  "id": "2D17T2N18",
  "angularObjects": {
    "2CYWUJACM:shared_process": [],
    "2D1EN4QZD:shared_process": [],
    "2CZD71VF8:shared_process": [],
    "2CZ37EUFT:shared_process": [],
    "2CZBJT9XJ:shared_process": [],
    "2CZ5H6JXQ:shared_process": [],
    "2D12E1BMZ:shared_process": [],
    "2CZZQVU59:shared_process": [],
    "2D168XTGW:shared_process": [],
    "2CYTH192P:shared_process": [],
    "2CX3PZJZQ:shared_process": [],
    "2CZTTJ1FV:shared_process": [],
    "2CWNYDQ86:shared_process": [],
    "2CZFHBZDG:shared_process": [],
    "2CYHP3ZX4:shared_process": [],
    "2CY96RJ1Y:shared_process": [],
    "2CXRXM356:shared_process": [],
    "2CY1N7Q3W:shared_process": [],
    "2CZXKHW8J:shared_process": [],
    "2CZE4C357:shared_process": []
  },
  "config": {},
  "info": {}
}